#!/usr/bin/make -f
export DH_VERBOSE=1

export DEB_BUILD_MAINT_OPTIONS=hardening=+all
debian_cflags  := $(shell dpkg-buildflags --get CFLAGS) $(shell dpkg-buildflags --get CPPFLAGS)
debian_ldflags := $(shell dpkg-buildflags --get LDFLAGS)

# export necessary perl hardenging flags
# see: src/http/modules/perl/Makefile.PL
DEBIAN_NGINX_PERL_LDFLAGS:= $(shell DEB_BUILD_MAINT_OPTIONS=hardening=+all,-pie dpkg-buildflags --get LDFLAGS)
export DEBIAN_NGINX_PERL_LDFLAGS

FLAVOURS := core full light extras

MODULESDIR = $(CURDIR)/add-modules
BASEDIR    = $(CURDIR)
BUILDDIR   = $(CURDIR)/debian/build

DEB_BUILD_ARCH ?=$(shell dpkg-architecture -qDEB_BUILD_ARCH)
ifeq ($(DEB_BUILD_ARCH),sparc)
	debian_cflags += -m32 -mcpu=ultrasparc
endif

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
	MAKEFLAGS += -j$(NUMJOBS)
endif

####  to use repository luajit:
##ifneq ("$(wildcard /usr/include/luajit-2.1)","")
##	debian_cflags += -I/usr/include/luajit-2.1
##    debian_ldflags += -lluajit-5.1
##	## not yet supported by nginx luajit module
##else
##ifneq ("$(wildcard /usr/include/luajit-2.0)","")
##    debian_cflags += -I/usr/include/luajit-2.0
##    debian_ldflags += -lluajit-5.1
##endif
##endif

# Now we use luajit from openresty:
debian_cflags  += -I$(shell pwd)/local/include/luajit-2.1
debian_ldflags += -L$(shell pwd)/local/lib -lluajit-5.1
openssl_source = --with-openssl=$(CURDIR)/add-modules/openssl


# configure flags
configure_flags := \
			--with-cc-opt="-DNGX_HAVE_OPENSSL_SHA1_H -DNGX_OPENSSL_MD5 -DNGX_HAVE_OPENSSL_MD5_H $(debian_cflags)" \
			--with-ld-opt="$(debian_ldflags)" \
			--prefix=/usr/share/nginx \
			--conf-path=/etc/nginx/nginx.conf \
			--http-log-path=/var/log/nginx/access.log \
			--error-log-path=/var/log/nginx/error.log \
			--lock-path=/var/lock/nginx.lock \
			--pid-path=/run/nginx.pid \
			--http-client-body-temp-path=/var/lib/nginx/body \
			--http-fastcgi-temp-path=/var/lib/nginx/fastcgi \
			--http-proxy-temp-path=/var/lib/nginx/proxy \
			--http-scgi-temp-path=/var/lib/nginx/scgi \
			--http-uwsgi-temp-path=/var/lib/nginx/uwsgi \
			--with-pcre-jit --with-pcre --without-pcre2 \
            --with-http_perl_module \
			--with-http_ssl_module $(openssl_source) \
			--with-http_stub_status_module \
			--with-http_realip_module \
			--with-http_auth_request_module \
			--with-http_addition_module \
			--with-http_dav_module \
            --with-http_flv_module \
            --with-http_mp4_module \
			--with-http_geoip_module \
			--with-http_gunzip_module \
			--with-http_gzip_static_module \
			--with-http_image_filter_module \
			--with-http_sub_module \
			--add-module=$(MODULESDIR)/nginx-upload-module \
			--add-module=$(MODULESDIR)/nginx-upload-progress-module \
			--add-module=$(MODULESDIR)/ngx_cache_purge \
			--add-module=$(MODULESDIR)/ngx_devel_kit \
			--add-module=$(MODULESDIR)/ngx_postgres \
			--add-module=$(MODULESDIR)/set-misc-nginx-module \
			--add-module=$(MODULESDIR)/nginx-auth-ldap \
			--add-module=$(MODULESDIR)/lua-nginx-module \
			--add-module=$(MODULESDIR)/echo-nginx-module 


%:
	dh $@  --parallel

override_dh_auto_configure: config.arch
override_dh_auto_build:     build.arch
override_dh_strip:          strip.arch
override_dh_clean:          clean.arch
	dh_clean

override_dh_installinit:
	dh_installinit --no-restart-on-upgrade --no-start --name=nginx-coolkit

#override_dh_systemd_enable:
#	dh_systemd_enable --name=nginx-coolkit

override_dh_installlogrotate:
	dh_installlogrotate --package nginx-coolkit --name=nginx-coolkit

build.arch:
	$(MAKE) -C $(BUILDDIR) build

strip.arch:
	dh_strip --package=nginx-coolkit --dbg-package=nginx-coolkit-dbg

config.arch:
	dh_testdir
	mkdir -p $(BUILDDIR)
	cp -Pa $(CURDIR)/auto $(BUILDDIR)/
	cp -Pa $(CURDIR)/conf $(BUILDDIR)/
	cp -Pa $(CURDIR)/configure $(BUILDDIR)/
	cp -Pa $(CURDIR)/contrib $(BUILDDIR)/
	cp -Pa $(CURDIR)/src $(BUILDDIR)/
	cp -Pa $(CURDIR)/man $(BUILDDIR)/
	cd $(BUILDDIR) && LD_LIBRARY_PATH=`pwd`/../../local/lib ./configure $(configure_flags)

clean:
	rm -rf $(BUILDDIR)

